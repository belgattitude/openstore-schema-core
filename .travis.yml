language: php
sudo: required
dist: trusty

cache:
    directories:
        - vendor
        - $HOME/.composer/cache

before_install:
  - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo "xdebug not available"

before_script:
  - echo -e "[server]\ninnodb_file_per_table=1\ninnodb_file_format=barracuda\ninnodb_large_prefix=1" | sudo tee -a /etc/mysql/my.cnf
  - sudo service mysql restart
  - mysql -e "DROP DATABASE IF EXISTS openstore_test_utf8_compat;" -u root
  - mysql -e "CREATE DATABASE openstore_test_utf8_compat;" -u root
  - mysql -e "DROP DATABASE IF EXISTS openstore_test_utf8mb4;" -u root
  - mysql -e "CREATE DATABASE openstore_test_utf8mb4;" -u root
  - cp ./.travis/openstore-schema-core.config.travis.php ./config/openstore-schema-core.config.php

install:
  - travis_retry composer -n install

script:
  - composer build
  - cat resources/sql/mysql-utf8-compat/create_schema_utf8_compat.sql | mysql -u root openstore_test_utf8_compat
  - cat resources/sql/mysql-utf8-compat/create_schema_extra_utf8_compat.sql | mysql -u root openstore_test_utf8_compat
  - cat resources/sql/create_schema_utf8mb4.sql | mysql -u root openstore_test_utf8mb4
  - cat resources/sql/create_schema_extra_utf8mb4.sql | mysql -u root openstore_test_utf8mb4
  - ./bin/openstore-schema-core openstore:schema:create --dump-sql

jobs:
  include:
    # PHP 7.1
    - stage: Test
      php: 7.1
      env: MYSQL_VERSION=5.7
      sudo: required
    - stage: Test
      php: 7.1
      env: MARIADB_VERSION=10.1
      addons:
        mariadb: 10.1
    - stage: Test
      php: 7.1
      env: MARIADB_VERSION=10.2
      addons:
        mariadb: 10.2
    # PHP 7.2
    - stage: Test
      php: 7.2
      env: MYSQL_VERSION=5.7
      sudo: required
    - stage: Test
      php: 7.2
      env: MARIADB_VERSION=10.1
      addons:
        mariadb: 10.1
    - stage: Test
      php: 7.2
      env: MARIADB_VERSION=10.2
      addons:
        mariadb: 10.2

    # PHPstan
    - stage: PHPStan
      php: 7.1
      script:
        - vendor/bin/phpstan analyse -l 5 -c phpstan.neon src tests bin

    # Coding standards
    - stage: Coding standard
      php: 7.2
      script:
        - ./vendor/bin/php-cs-fixer --diff --dry-run -v fix

    # Coverage
    - stage: Coverage
      php: 7.1
      before_script:
        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{.disabled,}
        - if [[ ! $(php -m | grep -si xdebug) ]]; then echo "xdebug required for coverage"; exit 1; fi
      script:
        - ./vendor/bin/phpunit -v --coverage-clover coverage.xml
      after_script:
        #- wget https://scrutinizer-ci.com/ocular.phar
        #- php ocular.phar code-coverage:upload --format=php-clover clover.xml



